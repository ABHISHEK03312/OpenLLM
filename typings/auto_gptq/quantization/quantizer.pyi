from _typeshed import Incomplete
from torch import nn

class Quantizer(nn.Module):
    def __init__(self, shape: int = ...) -> None: ...
    maxq: Incomplete
    perchannel: Incomplete
    sym: Incomplete
    mse: Incomplete
    norm: Incomplete
    grid: Incomplete
    maxshrink: Incomplete
    def configure(self, bits, perchannel: bool = ..., sym: bool = ..., mse: bool = ..., norm: float = ..., grid: int = ..., maxshrink: float = ..., trits: bool = ...) -> None: ...
    scale: Incomplete
    zero: Incomplete
    def find_params(self, x, weight: bool = ...) -> None: ...
    def quantize(self, x): ...
    def enabled(self): ...
    def ready(self): ...
