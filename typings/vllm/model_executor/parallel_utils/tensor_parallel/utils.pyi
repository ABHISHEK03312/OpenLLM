from typing import List
from typing import Sequence

import torch

def ensure_divisibility(numerator, denominator) -> None: ...
def divide(numerator, denominator): ...
def split_tensor_along_last_dim(tensor: torch.Tensor, num_partitions: int, contiguous_split_chunks: bool = ...) -> List[torch.Tensor]: ...

class VocabUtility:
    @staticmethod
    def vocab_range_from_per_partition_vocab_size(per_partition_vocab_size: int, rank, world_size: int) -> Sequence[int]: ...
    @staticmethod
    def vocab_range_from_global_vocab_size(global_vocab_size: int, rank: int, world_size: int) -> Sequence[int]: ...
